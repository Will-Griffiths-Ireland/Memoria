@import url('https://fonts.googleapis.com/css2?family=Varela+Round&display=swap');

* {

    /* Setting a custom cursor */
    cursor: url(../images/cursor.png), pointer;
    margin: 0;
    font-family: 'Varela Round', sans-serif;

    /* this code is part of testing for a mode to disable all animations */

    /* transition: none !important;
    animation-name: none !important;
    animation-delay:0s !important; */

}



body {
    background-color: #000;
    margin: 0;
    width: 100vw;
    height: 100vh;
    box-sizing: border-box;
    border: 0;
    /* overflow-y: hidden;
    overflow-x: hidden; */
}

img {
    /* This filter to add drop shadows gives the cards some definition in stacks/overlap so that colors dor not blend into one.
    The advantage over a border is that this conforms to the actual image border and ignores transparency */
    filter: drop-shadow(0px 0px 1px #000);
}


#userCapture{

    position: absolute;
    z-index: 20000;
    border-color: #908e8ef4;
    box-shadow: 1vw 1vw #00000055;
    border-style: solid;
    border-width: 1vmin;
    top: 45vh;
    left: 20vw;
    height: 10vh;
    width: 60vw;
    background-color: #fffffff4;
    opacity: 1;
    border-radius: 2vw;

}


@media only screen and (min-width: 600px) {
    
    #userCapture{
        position: absolute;
        z-index: 20000;
        border-color: #908e8ef4;
        box-shadow: 1vw 1vw #00000055;
        border-style: solid;
        border-width: 1vw;
        height: auto;
        width: auto;
        background-color: #fffffff4;
        opacity: 1;
        border-radius: 2vw;
    }
    
}
.welcomeText{

    color: #000;
    font-size: 2.2vmax;
    text-align: center;
    display: block;
    border: 0;
    margin: 0;
    transition-duration: 250ms;

}

#menuIconContainer{

    position: absolute;
    display: block;
    width: fit-content;
    height: fit-content;
    z-index: 60000;

}
.menuIcon{

    display: inline;
    position: relative;
    color: #fff;
    font-size: 5vw;
}

.menuIcon:hover{

    color: #908e8ef4;
    font-size: 5.1vw;
    transition-duration: 100ms;
    }


/* styling for main menu div */
#mainMenu {
    
    position: relative;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    z-index: 20000;
    font-size: 2rem;
    letter-spacing: .2rem;
    padding: 1vw;
    border-color: #908e8ef4;
    box-shadow: 1vw 1vw #00000055;
    border-style: solid;
    border-width: 1vmin;
    height: auto;
    width: auto;
    background-color: #fffffff4;
    opacity: 1;
    border-radius: 2vw;
}


@media only screen and (min-width: 600px) {
    #mainMenu {
        position: relative;
        z-index: 20000;
        font-size: 2.5rem;
        letter-spacing: .5rem;
        border-color: #908e8ef4;
        box-shadow: 1vw 1vw #00000055;
        border-style: solid;
        border-width: 1vw;
        height: auto;
        max-height: 100vh;
        width: auto;
        background-color: #fffffff4;
        opacity: 1;
        border-radius: 2vw;
    }
}

.menuDrop {
    animation-name: dropIn;
    animation-duration: 1s;
    animation-fill-mode: forwards;
}

.menuItem {
    color: rgb(0, 0, 0);
    font-size: 3vw;
    text-align: center;
    display: block;
    width: fit-content;
    background-color: #908e8ef4;
    box-shadow: .5vw .5vw .5vw #000;
    border-radius: 2vw;
    padding: .5vw;
    margin: 2vw;
    transition-duration: 250ms;
}

@media only screen and (min-width: 600px) {
    .menuItem {
        font-size: 1.2vw;
        border-radius: 1vw;
        padding: .5vw;
        margin: .8vw;
        text-align: center;
        display: block;
        transition-duration: 250ms;
    }

}

.menuItem:hover {
    color: #fff;
    transition-duration: 250ms;
}

.menuBurn {
    animation-name: fadeOut;
    animation-duration: 1s;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
}

/* This is the for the general game are that covers the entire viewable screen */

#gameArea {
    width: 100vw;
    height: 100vh;
    perspective: 2000px;
    position: fixed;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
}

#playerCardsArea {
    position: absolute;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    bottom: 2vh;
    width: 100vw;
    height: 40vh;
}

#cardsToMatchArea {
    position: absolute;
    display: flex;
    justify-content: center;
    flex-wrap: wrap;
    top: 2vh;
    width: 100vw;
    height: 40vh;
}

#roundDisplay {

    position: relative;
    margin: 0;
    display: block;
    text-align: center;
    color: #000;
    font-size: 2rem;
    z-index: 20000;
}

@media only screen and (min-width: 600px) {

    #roundDisplay {

        position: relative;
        margin: 0;
        display: block;
        text-align: center;
        font-size: 4rem;
        z-index: 15000;
    }

}

/* pushing the card up to indicate selection. Temp solution and uses !important to override positioning in other class */
.cardSelected {
    bottom: 2vh;
    transition: 500ms;
}

/* Class that applies default styling to the card container div */
.cardContainer {
    transform-style: preserve-3d;
    position: relative;
    display: inline-block;
    width: calc(25%);
    height: auto;
}

@media only screen and (min-width: 600px) {
    .cardContainer {
        width: calc(25% / 2);
    }

}

/* Class that applies default styling to a cards face and back */

.cardBack {
    backface-visibility: hidden;
    position: absolute;
    object-fit: contain;
    width: 100%;
    height: 100%;
    z-index: 100;
}

/* This one is a little funky but its used as part of the fade out animation when we burn cards */
.cardFaceDel {
    position: absolute;
    object-fit: contain;
    z-index: 50;
    backface-visibility: visible;
    width: 100%;
    height: 100%;
}


.cardFace {
    transform: rotateY(180deg);
    position: absolute;
    object-fit: contain;
    z-index: 50;
    backface-visibility: hidden;
    width: 100%;
    height: 100%;
}

/* Flip card over */
.cardFlipped {
    animation-name: flip;
    animation-delay: 0ms;
    animation-iteration-count: 1;
    animation-duration: 1s;
    animation-fill-mode: forwards;

}

/* flip card back */
.cardFlippedBack {
    animation-name: flipBack;
    animation-iteration-count: 1;
    animation-duration: 1s;
    animation-fill-mode: backwards;
    animation-direction: reverse;
}

@keyframes flip {
    0% {}

    100% {
        transform: rotateY(180deg);
    }
}

@keyframes flipBack {
    0% {}

    100% {
        transform: rotateY(-180deg);
    }
}

/* Animation to emulated card dropping in from above with a fade and bounce */

.dropIn {
    animation-name: dropIn;
    animation-fill-mode: both;
    animation-duration: 1000ms;
    animation-iteration-count: 1;
}

@keyframes dropIn {
    0% {
        transform: scale(4);
        opacity: 0;
    }

    80% {
        transform: scale(.9);
        opacity: 1;
    }

    100% {
        transform: scale(1);
        opacity: 1;
    }
}

/* Class to fade out card before we remove it from the DOM */

.burnUp {

    animation-name: fadeOut;
    animation-duration: 3s;
    animation-fill-mode: forwards;
}

.burnGameArea{
    opacity: 0;
    transition-duration: 1s;
}

@keyframes fadeOut {
    0% {
        transform: scale(1);
        opacity: 1;
    }

    100% {
        transform: scale(0);
        opacity: 0;
    }
}